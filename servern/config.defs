cpp build/config.cpp
hpp build/config-db.hpp
echocpp #include "config.hpp"
echohpp #include "../parse2.hpp"

struct t_config_database
name attr varchar 15
type attr enum lmdb,kyoto,kyotohash,level,tokyo,tokyohash,upscale,gdbm
path attr string 1024

# memory map size in MiB (for lmdb is also max db size, +kyoto)
mmap attr ulong def=0

# nuber of fsyncs per commit, 2 is best, 1 is compromise, 0 is unsafe
sync attr int def=2

# block size for leveldb and page size for kyoto in KiB
block attr ulong def=0

# sizes for leveldb in MiB
memtable attr ulong def=0
sstable attr ulong def=0

# size of block cache in MiB for LevelDB (default off) or Kyoto (default 64)
cache attr ulong def=0

# bloom filter bits for leveldb (default off)
bloom attr ulong def=0

# whether to verify checksums (-1 default, 0 off, 1 on, 2 paranoid)
checksum attr int def=-1

# compression (-1 default, 0 disable, 1 enable, ... )
compress attr int def=-1

# small kyoto database, max 16GiB, saves 4B
small attr bool def=0
# linear collision chaining, saves 6B
linear attr bool def=0
# power of two of the free block pool (default 10)
kyotofbp attr int def=10
# number of buckets in thousands (recommended twice the number of records)
buckets attr ulong def=0
# if set to N>0, defragment kyoto cabiner every N operations
defrag attr int def=0


#other db options, like locking, subdb, lock release, bloom...
%

hpp build/config.hpp
echohpp #include "config-db.hpp"

struct t_config_fastcgi
threads attr int def=62
path attr string 1024
%

struct t_config_listen
port attr int
path attr string 1024
%

struct t_config_id
name attr string 1024
keyfile attr string 1024 def=
%

struct t_config_subs_files
%

struct t_config_subs
name tagname string 20
id attr int
key attr string 64 def=
report_db attr string 16 def=main
success attr enum notify,fail def=notify
errors attr enum queue,expire def=expire
expire attr enum notify,queue,disable def=notify
files attr enum queue,store def=store
trickle_db attr string 16 def=main
trickle attr enum queue,store,ignore def=ignore
filesv vector struct t_config_subs_files tag=files
inputs skip
%

struct t_config_peers
name tagname string 20
id attr int
host attr string 512 def=
ip attr string 128 def=
port attr int
%

struct t_config_signature
id attr string 64
content content string 1024
%

struct t_config_server_keys_old
expire attr long
content content string 64
%

struct t_config_server_keys
master string 64
old vector structn
%

struct t_config
database vector structn
fastcgi structn
listen structn
id structn
signature structn
server_keys structn opt=has_keys
subs vector structn innertag=*
peers vector structn innertag=* vmax=56
codesign string 1024
#bullshit enum aa,bb,cc
stdio boolp
%
